#!/usr/bin/env bash

while [ "${#}" -gt 0 ]; do
  case "${1}" in
    -c | --config-dir)  CONFIG_DIR="${2}";  shift 2;;
    -f | --force)       FORCE=1;            shift 1;;
    -i | --interactive) INTERACTIVE=1;      shift 1;;
    -v | --verbose)     VERBOSE=1;          shift 1;;
    -y | --yes)         INTERACTIVE=0;      shift 1;;
    *)                  CONFIGS+=("${1}");  shift 1;;
  esac
done

[ ${#CONFIGS} -eq 0 ]       && CONFIGS=(*)
[ ${#CONFIG_DIR} -eq 0 ]    && CONFIG_DIR=${XDG_CONFIG_DIR:-${HOME}/.config}
[ ${FORCE} -eq 1 ]          && ARGV_FLAGS+=("-f")
[ ${INTERACTIVE:-1} -eq 1 ] && ARGV_FLAGS+=("-i")
[ ${VERBOSE} -eq 1 ]        && ARGV_FLAGS+=("-v")

ln_dotfile() {
  [ -h "${2}" ] && unlink "${2}"
  [ -d "${2}" ] && rm -r "${ARGV_FLAGS[@]}" "${2}"

  ln -s "${ARGV_FLAGS[@]}" "${1}" "${2}"
}

while [ "${#CONFIGS}" -gt 0 ]; do

  #- pop the first item in `${CONFIGS[@]}` and save it as `$config`
  config="${CONFIGS[0]}" && CONFIGS=("${CONFIGS[@]:1}")

  case ${config} in
    "${0##*/}") #- skip over this file
      continue
      ;;
    bash)
      DOTFILES+=(sh/profile bash/*)
      ;;
    curl)
      DOTFILES+=(curl/curlrc)
      ;;
    git)
      DOTFILES+=(git/ignore)
      ;;
    nvim)
      CONFIGS+=(vim)
      ;;
    vim)
      DOTFILES+=(vim)
      ;;
    x11)
      # DOTFILES+=(x11/*)
      continue
      ;;
    zsh)
      DOTFILES+=(sh/profile zsh/*)
      ;;
  esac

  ln_dotfile "${PWD}/${config}" "${CONFIG_DIR}/${config}"

done

#- dedup `${DOTFILES[@]}` before looping over it
for dotfile in $(echo "${DOTFILES[@]}" | sed 's/ /\n/g' | awk '!x[$0]++'); do
  ln_dotfile "${PWD}/${dotfile}" "${HOME}/.${dotfile##*/}"
done
